{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","apiUrl","useState","listApi","setListApi","useEffect","axios","then","reponse","data","handleDelete","id","a","console","log","delete","find","filter","list","newList","handleUpdate","newApi","patch","newData","findIndex","check","some","name","description","price","Tablee","React","lazy","className","fallback","style","color","length","onHandleUpdate","onHandleDelete","apiList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSA+DeA,MAxDf,WACE,IAAMC,EAAS,yDAEf,EAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KAQAC,qBAAU,WALRC,IAAML,GACHM,MAAK,SAAAC,GAAO,OAAIJ,EAAWI,EAAQC,WAMtC,IAEF,IAAMC,EAAY,uCAAE,WAAOC,GAAP,iBAAAC,EAAA,6DAClBC,QAAQC,IAAR,UAAeb,EAAf,YAAyBU,IADP,SAGZL,IAAMS,OAAN,UAAgBd,EAAhB,YAA0BU,IAHd,OAIZK,EAAOb,EAAQc,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAC1CQ,EALY,YAKEH,GACpBZ,EAAW,YAAIe,IANG,2CAAF,sDASZC,EAAY,uCAAG,WAAOT,EAAGU,GAAV,mBAAAT,EAAA,sEACbN,IAAMgB,MAAN,UAAerB,EAAf,YAAyBU,GAAKU,GACnCd,MAAK,SAAAC,GAAO,OAAIK,QAAQC,IAAIN,EAAQC,SAFlB,OAIbc,EAJa,YAICpB,GAEda,EAAOO,EAAQC,WAAU,SAAAf,GAAI,OAAIA,EAAKE,KAAOA,KACnDY,EAAQP,GAAR,eAAoBK,GAEdI,EAAQtB,EAAQuB,MAAK,SAAAjB,GAAI,OAAIA,EAAKkB,OAASJ,EAAQP,GAAMW,MAAQlB,EAAKmB,cAAgBL,EAAQP,GAAMY,aAAenB,EAAKoB,QAAUN,EAAQP,GAAMa,SAEtJhB,QAAQC,IAAIW,GACPA,GACHrB,EAAW,YAAImB,IAbE,2CAAH,wDAkBZO,EAAUC,IAAMC,MAAK,kBAAK,sDAEhC,OACE,qBAAKC,UAAU,kBAAf,SACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,sBAAKD,UAAU,YAAf,UAA2B,sBAAME,MAAO,CAACC,MAAM,OAApB,SAA6BjC,EAAQkC,SAAhE,YACA,cAAEP,EAAF,CAASQ,eAAgBlB,EAAcmB,eAAgB7B,EAAc8B,QAASrC,YC5CzEsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b2039baf.chunk.js","sourcesContent":["import React, {Suspense, useEffect,useState} from 'react';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport axios from \"axios\"\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  const apiUrl = \"https://tgt-commerce-server.herokuapp.com/api/products\";\n\n  const [listApi,setListApi] = useState([]);\n\n  const getApi = () => {\n    axios(apiUrl)\n      .then(reponse => setListApi(reponse.data))\n  }\n\n \n  useEffect(()=>{\n    getApi()\n  },[]);  \n\n  const handleDelete =async (id) => {\n    console.log(`${apiUrl}/${id}`)\n    \n    await axios.delete(`${apiUrl}/${id}`)\n    const find = listApi.filter(list => list.id !== id);\n    const newList = [...find];\n    setListApi([...newList]);\n  }\n\n  const handleUpdate = async (id,newApi) => {\n    await axios.patch(`${apiUrl}/${id}`,newApi)\n    .then(reponse => console.log(reponse.data))\n\n    const newData = [...listApi];\n\n    const find = newData.findIndex(data => data.id === id);\n    newData[find] = {...newApi};\n\n    const check = listApi.some(data => data.name === newData[find].name && data.description === newData[find].description && data.price === newData[find].price);\n\n    console.log(check)\n    if (!check) {\n      setListApi([...newData])\n    }\n    \n  }\n\n  const Tablee =  React.lazy(()=> import('./Components/Table'))\n\n  return (\n    <div className=\"container-fluid\">\n      <Suspense fallback={<div>...loading</div>}>\n        <Router>\n          <div className=\"mt-2 mb-2\"><span style={{color:\"red\"}}>{listApi.length}</span> items</div>\n          < Tablee onHandleUpdate={handleUpdate} onHandleDelete={handleDelete} apiList={listApi} />\n        </Router>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}